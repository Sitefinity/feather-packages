@model Telerik.Sitefinity.Frontend.Forms.Mvc.Models.Fields.ParagraphTextField.ParagraphTextFieldViewModel

@using Telerik.Sitefinity.UI.MVC;
@using Telerik.Sitefinity.Frontend.Forms.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Modules.Pages;
@Html.Script(ScriptRef.JQuery, "jquery", false)
@{
    var hasDescription = !string.IsNullOrEmpty(Model.MetaField.Description);
}
<div class="@Model.CssClass my-3" data-sf-role="paragraph-text-field-container">
    <input type="hidden" data-sf-role="violation-messages" value='{"maxLength":"@Model.MaxLengthViolationMessage", "required": "@Model.RequiredViolationMessage"}' />
    <label class="form-label" for='@Html.UniqueId("Textarea")'>@Model.MetaField.Title </label>
    <textarea id='@Html.UniqueId("Textarea")'
              class="form-control"
              rows="4"
              data-sf-role="paragraph-text-field-textarea"
              name="@Model.MetaField.FieldName"
              placeholder="@Model.PlaceholderText"
              @MvcHtmlString.Create(Model.ValidationAttributes)
              @{if (hasDescription) { <text> aria-describedby='@Html.UniqueId("ParagraphInfo") @Html.UniqueId("ParagraphErrorMessage")' </text>  } else { <text> aria-describedby='@Html.UniqueId("ParagraphErrorMessage")' </text>  } }>@Model.Value</textarea>
    
    <div id='@Html.UniqueId("ParagraphErrorMessage")' data-sf-role="error-message" role="alert" aria-live="assertive" class="invalid-feedback"></div>
    
    @if (hasDescription)
    {
        <p class="form-text" id='@Html.UniqueId("ParagraphInfo")'>@Model.MetaField.Description</p>
    }
    
</div>

@Html.Script(Url.WidgetContent("Mvc/Scripts/Form/form.all.js"), "bottom", false)
