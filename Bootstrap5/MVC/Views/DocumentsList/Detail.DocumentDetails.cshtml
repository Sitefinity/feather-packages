@model Telerik.Sitefinity.Frontend.Media.Mvc.Models.DocumentsList.DocumentDetailsViewModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Web.DataResolving;

<div class="@Model.CssClass" role="group">

    <h1>
        @Model.Item.Fields.Title
    </h1>

    <div class="text-muted">
        <span class="visually-hidden">@Html.Resource("PublishedOn") </span>
        @Model.Item.GetDateTime("PublicationDate", "MMM d, yyyy, HH:mm tt")
        @Html.Resource("By")
        @DataResolver.Resolve(@Model.Item.DataItem, "Author", null)
    </div>

    @if (!string.IsNullOrEmpty(Model.Item.Fields.Description))
    {
    <div class="mt-3" aria-label="@Html.Resource(" DocumentSummary")">
        @Model.Item.Fields.Description
    </div>
    }

    <div class="d-flex gap-3 align-items-center mt-3">
        <div class="flex-shrink-0 pt-1" aria-hidden="true">
            <div class="fa-layers fa-3x">
                <svg class="svg-inline--fa fa-w-16">
                    <use xlink:href="~/ResourcePackages/Bootstrap5/assets/dist/sprites/solid.svg#file" class="fa-secondary"></use>
                </svg>
                <span class="fa-layers-text fa-layers-bottom-right text-uppercase ps-3 pe-3 mb-2 text-white @GetFileExtensionCssClass(Model.Extension) sf-icon-txt-@Model.Extension">@Model.Extension</span>
            </div>
        </div>
        <div class="flex-grow-1" role="group">
            <div>
                <a href="@Model.Item.Fields.MediaUrl" target="_blank">@Html.Resource("Download")<span class="visually-hidden">@Model.Item.Fields.Title</span></a>
                <span class="text-muted small" aria-label="@Html.Resource(" FileExtension")">(@Model.Extension)</span>
            </div>
            <span class="text-muted small" aria-label="@Html.Resource(" FileSize")">@(Math.Ceiling((double)Model.Item.Fields.TotalSize / 1024) + " KB")</span>
        </div>
    </div>

</div>

@*Resolves the class that will be added for each file depending in the file extension*@
@helper GetFileExtensionCssClass(String extension)
{

    if (extension == "xlsx")
    {
        @Html.HtmlSanitize("bg-green");
    }
    else if (extension == "doc" || extension == "docx")
    {
        @Html.HtmlSanitize("bg-blue");
    }
	else if (extension == "ppt" || extension == "pptx")
    {
        @Html.HtmlSanitize("bg-orange");
    }
	else if (extension == "pdf")
    {
        @Html.HtmlSanitize("bg-red");
    }
	else if (extension == "zip")
    {
        @Html.HtmlSanitize("bg-purple");
    }
	else
	{
        @Html.HtmlSanitize("bg-gray");
	}
}