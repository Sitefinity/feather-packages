@model Telerik.Sitefinity.Frontend.Forms.Mvc.Models.Fields.DropdownListField.DropdownListFieldViewModel

@using Telerik.Sitefinity.UI.MVC;
@using Telerik.Sitefinity.Frontend.Forms.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Modules.Pages;
@Html.Script(ScriptRef.JQuery, "jquery", false)
@{
    var isRequired = Model.IsRequired ? "true" : "false";
    var hasDescription = !string.IsNullOrEmpty(Model.MetaField.Description);
}
<div class="@Model.CssClass my-3" data-sf-role="dropdown-list-field-container">
    <input type="hidden" data-sf-role="violation-messages" value='{ "required": "@Model.RequiredViolationMessage"}' />
    <label class="form-label" for='@Html.UniqueId("Dropdown")'>
        @Model.MetaField.Title
    </label>
    <select id='@Html.UniqueId("Dropdown")'
            data-sf-role="dropdown-list-field-select"
            name="@Model.MetaField.FieldName"
            @MvcHtmlString.Create(Model.ValidationAttributes)
            class="form-select"
            aria-required="@isRequired"
            @{if (hasDescription) { <text> aria-describedby='@Html.UniqueId("DropdownInfo") @Html.UniqueId("DropdownErrorMessage")' </text>  } else { <text> aria-describedby='@Html.UniqueId("DropdownErrorMessage")' </text>  } }>
        @foreach (var choice in Model.Choices)
        {
            string value = !string.IsNullOrEmpty(Model.Value as string) ? Model.Value as string : string.Empty;
            bool isSelected = (!string.IsNullOrEmpty(value) && choice == value) ||
                            (string.IsNullOrEmpty(value) && !Model.IsRequired && choice == Model.MetaField.DefaultValue as string);

            var optionAttributes = isSelected ? "selected" : string.Empty;
            var optionValue = Model.IsRequired && choice == Model.Choices.FirstOrDefault() ? string.Empty : choice;

            <option @optionAttributes value="@optionValue">@choice</option>
        }
    </select>
    <div id='@Html.UniqueId("DropdownErrorMessage")' data-sf-role="error-message" role="alert" aria-live="assertive" class="invalid-feedback"></div>
    @if (hasDescription)
    {
        <p class="form-text" id='@Html.UniqueId("DropdownInfo")'>@Model.MetaField.Description</p>
    }
    
</div>

@Html.Script(Url.WidgetContent("Mvc/Scripts/Form/form.all.js"), "bottom", false)