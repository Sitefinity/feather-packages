@model Telerik.Sitefinity.Frontend.Search.Mvc.Models.ISearchResultsModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Search.Mvc.Models;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Modules.Libraries;
@using Telerik.Sitefinity.Libraries.Model;
@using Telerik.Sitefinity.Web;

<div class=" @Model.CssClass">

    <div class="row">
        <div class="col-lg-8">
            @if (@Model.Results.TotalCount > 0)
            {
                if (ViewBag.IsFilteredbyPermission)
                {
                    <h1 role="alert" aria-live="assertive">@Html.HtmlSanitize(Model.ResultText)</h1>
                }
                else
                {
                    <h1 role="alert" aria-live="assertive">@Model.Results.TotalCount @Html.HtmlSanitize(Model.ResultText)</h1>
                }
            }
            else
            {
                <h1 role="alert" aria-live="assertive">@Html.Resource("No") @Html.HtmlSanitize(Model.ResultText)</h1>
            }
        </div>
        <div class="col-lg-4">
            @if (Model.AllowSorting && @Model.Results.TotalCount > 0)
            {
                <label>
                    @Html.Resource("SortBy")
                <select class="userSortDropdown" title="@Html.Resource("SortDropdown")">
                    <option value="@OrderByOptions.Relevance" @(Model.OrderBy == OrderByOptions.Relevance ? "selected=selected" : "")>@Html.Resource("Relevance")</option>
                    <option value="@OrderByOptions.Newest" @(Model.OrderBy == OrderByOptions.Newest ? "selected=selected" : "")>@Html.Resource("NewestFirst")</option>
                    <option value="@OrderByOptions.Oldest" @(Model.OrderBy == OrderByOptions.Oldest ? "selected=selected" : "")>@Html.Resource("OldestFirst")</option>
                </select>
            </label>
        }
        </div>
    </div>

    @if (Model.Languages.Length > 1)
    {
        <div>
            <span>@Html.Resource("ChangeResultsLanguageLabel") </span>
            @for (var i = 0; i < Model.Languages.Length; i++)
            {
                <a href="@(String.Format(ViewBag.LanguageSearchUrlTemplate, Model.Languages[i].Name))">@Model.Languages[i].DisplayName</a>
                if (i < Model.Languages.Length - 2)
                {
                    <span>, </span>
                }
                else if (i == Model.Languages.Length - 2)
                {
                    <span> @Html.Resource("OrLabel") </span>
                }
            }
        </div>
    }

    <div class="sf-search-results media-list">
        @foreach (var item in Model.Results.Data)
        {
            var hasLink = item.GetValue("Link") != null && !String.IsNullOrEmpty(item.GetValue("Link").ToString());
            <div class="media sf-media">

                @if (((Telerik.Sitefinity.Services.Search.Model.Document)item).ItemType.ToString() == typeof(Telerik.Sitefinity.Libraries.Model.Image).ToString())
                {

                    <div class="media-left pr-2 sf-img-thmb">
                        <a href="@item.GetValue("Link")">
                            <img src="@item.GetValue("Link")" alt="@item.GetValue("Title")" width="120" />
                        </a>
                    </div>
                }

                else if (((Telerik.Sitefinity.Services.Search.Model.Document)item).ItemType.ToString() == typeof(Telerik.Sitefinity.Libraries.Model.Video).ToString())
                {
                    LibrariesManager librariesManager = LibrariesManager.GetManager();
                    var videoTmbId = new Guid((string)item.GetValue("Id"));
                    Video video = librariesManager.GetVideo(videoTmbId);
                    if (video != null)
                    {
                        var thumbUrl = video.ThumbnailUrl;

                        <div class="media-left pr-2">
                            <div class="sf-video-thmb">

                                <a href="@item.GetValue("Link")">
                                    <img src="@thumbUrl" alt="@item.GetValue("Title")" width="120" />

                                    <div class="sf-icon-play"></div>

                                </a>
                            </div>
                        </div>
                    }

                }

                else
                {

                }


                <div class="media-body sf-media-body">

                    <h3>
                        @if (hasLink)
                        {
                            <a href="@item.GetValue("Link")">@item.GetValue("Title")</a>
                        }
                        else
                        {
                            @item.GetValue("Title")
                        }
                    </h3>

                    <p>@Html.HtmlSanitize((string)item.GetValue("HighLighterResult"))</p>
                    @if (hasLink)
                    {
                        <a href="@item.GetValue("Link")">@item.GetValue("Link")</a>
                    }
                </div>
            </div>
        }

    </div>

    @if (Model.DisplayMode == ListDisplayMode.Paging && Model.TotalPagesCount != null && Model.TotalPagesCount > 1)
    {
        if (ViewBag.IsFilteredbyPermission)
        {
            <ul class="pagination">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href='@string.Format(ViewBag.RedirectPageUrlTemplate, Model.CurrentPage - 1)'>@Html.Resource("Prev")</a>
                    </li>
                }
                @if (Model.CurrentPage < @Model.TotalPagesCount)
                {
                    <li class="page-item">
                        <a class="page-link" href='@string.Format(ViewBag.RedirectPageUrlTemplate, Model.CurrentPage + 1)'>@Html.Resource("Next")</a>
                    </li>
                }
            </ul>
        }
        else
        {
            if (Model.CurrentPage == Model.TotalPagesCount)
            {
                <em class="text-muted">@((Model.ItemsPerPage * Model.TotalPagesCount) - Model.Results.TotalCount) of @Model.Results.TotalCount results</em>
            }
            else
            {
                <em class="text-muted">@Model.ItemsPerPage of @Model.Results.TotalCount results</em>
            }

            <div>
                @Html.Action("Index", "ContentPager", new
                {
                    currentPage = Model.CurrentPage,
                    totalPagesCount = Model.TotalPagesCount,
                    redirectUrlTemplate = ViewBag.RedirectPageUrlTemplate
                })
            </div>
        }
    }

    <input type="hidden" data-sf-role="searchResOrderBy" value='@Request.QueryStringGet("orderBy")' />
    <input type="hidden" data-sf-role="searchResLanguage" value='@Request.QueryStringGet("language")' />
    <input type="hidden" data-sf-role="searchResIndexCatalogue" value='@Request.QueryStringGet("indexCatalogue")' />
    <input type="hidden" data-sf-role="searchResQuery" value='@Request.QueryStringGet("searchQuery")' />
    <input type="hidden" data-sf-role="searchResWordsMode" value='@Request.QueryStringGet("wordsMode")' />

</div>

@Html.Script(Url.WidgetContent("Mvc/Scripts/SearchResults/Search-results.js"), "bottom", throwException: false)