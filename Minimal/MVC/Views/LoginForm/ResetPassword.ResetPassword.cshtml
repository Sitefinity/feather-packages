@model Telerik.Sitefinity.Frontend.Identity.Mvc.Models.LoginForm.ResetPasswordViewModel

@using Telerik.Sitefinity.UI.MVC;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers
@using Telerik.Sitefinity.Services;

<div class="@Model.CssClass">

    <h3>@Html.Resource("ResetPasswordHeader")</h3>

    @if (Model.ResetComplete)
    {
        <h3>@Html.Resource("ResetPasswordSuccess")</h3>
        <strong><a href="@Model.LoginPageUrl">@Html.Resource("ResetPasswordBackToLogin")</a></strong>
    }
    else if (Model.RequiresQuestionAndAnswer && string.IsNullOrEmpty(Model.ResetPasswordQuestion))
    {    
        @Html.Resource("CannotResetPasswordError")
    }
    else
    {
        <form action="@(Url.Action("ResetPassword", "LoginForm"))" method="post" autocomplete="off">
            @Model.Error
            @Html.HiddenFor(u => u.SecurityToken)

            @if (Model.RequiresQuestionAndAnswer)
            {
                <div>
                    <label>
                        @Model.ResetPasswordQuestion
                        @Html.TextBoxFor(u => u.ResetPasswordAnswer)
                    </label>
                </div>
            }

            <div>
                <label>
                    @Html.Resource("ResetPasswordNewPassword")
                    @Html.PasswordFor(u => u.NewPassword)
                </label>
            </div>

            <div>
                <label>
                    @Html.Resource("ResetPasswordRepeatNewPassword")
                    @Html.PasswordFor(u => u.RepeatNewPassword)
                </label>
            </div>

            <div><input type="submit" value='@Html.Resource("ResetPasswordSaveButton")' @(SystemManager.IsDesignMode ? "disabled" : "") /></div>        
        </form>
    }

</div>
