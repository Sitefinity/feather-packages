@model Telerik.Sitefinity.Frontend.Identity.Mvc.Models.LoginForm.ResetPasswordViewModel

@using Telerik.Sitefinity.UI.MVC;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers

<div class="@Model.CssClass">
@if (Model.ResetComplete)
{
    <h3>@Html.Resource("ResetPasswordSuccess")</h3>
    <a href="@Model.LoginPageUrl" class="btn btn-default">@Html.Resource("ResetPasswordBackToLogin")</a>
}
else
{
    <h3>@Html.Resource("ResetPasswordHeader")</h3>
    <form action="@(Url.Action("ResetPassword", "LoginForm"))" method="post" autocomplete="off">
        @if (!string.IsNullOrEmpty(Model.Error))
        {

            <div class="alert alert-danger">
                @Model.Error
            </div>


        }
    
        @Html.HiddenFor(u => u.SecurityToken)
    
        @if (Model.RequiresQuestionAndAnswer)
        {
            
            <div class="form-group">
                <label>@Model.ResetPasswordQuestion</label>
                @Html.TextBoxFor(u => u.ResetPasswordAnswer, new { @class = "form-control" })
            </div>
        }
        
        <div class="form-group">
            <label>@Html.Resource("ResetPasswordNewPassword")</label>
            @Html.PasswordFor(u => u.NewPassword, new { @class = "form-control" })

        </div>

        <div class="form-group">
            <label>@Html.Resource("ResetPasswordRepeatNewPassword")</label>
             @Html.PasswordFor(u => u.RepeatNewPassword, new { @class = "form-control" })
        </div>
    
        <button class="btn btn-primary" type="submit">@Html.Resource("ResetPasswordSaveButton")</button>
        
    </form>
}

</div>
