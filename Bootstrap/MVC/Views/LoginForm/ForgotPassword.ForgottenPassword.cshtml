@model Telerik.Sitefinity.Frontend.Identity.Mvc.Models.LoginForm.ForgotPasswordViewModel

@using Telerik.Sitefinity.UI.MVC;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers

<div class="@Model.CssClass">

<h3>@Html.Resource("ForgotPasswordHeader")</h3>

@if (Model.EmailSent)
{
    <p>@Html.Resource("ForgotPasswordRequestSent")</p>

    <p role="alert">@Html.Resource("ForgotPasswordRequestSentUseLink")</p>

    <h4>
        <strong><a href="@Model.LoginPageUrl">@Html.Resource("ForgotPasswordBackToLogin")</a></strong>
    </h4>
}
else
{
    using (Html.BeginForm("SendPasswordResetEmail", "LoginForm", null, FormMethod.Post, new Dictionary<string, object> { { "role", "form" }, { "aria-label", @Html.Resource("ForgotPasswordHeader") } }))
    {

        <p>@Html.Resource("EnterLoginEmailAddress")</p>

        if (Model.EmailNotFound)
        {
            <div class="alert alert-danger" role="alert">
                Email @String.Format(Html.Resource("DoesNotExist"), Html.Encode(Model.Email))
            </div>
        }

        <div class="form-group">
            <label>@Html.Resource("ForgotPasswordEmail")
                @Html.TextBoxFor(u => u.Email, new { @class = "form-control", aria_required = "true", aria_label=@Html.Resource("EnterLoginEmailAddress") })
            </label>
        </div>

        <button type="submit" class="btn btn-default">@Html.Resource("ForgotPasswordSendButton")</button>
    }
}

</div>
