@model Telerik.Sitefinity.Frontend.Identity.Mvc.Models.LoginForm.LoginFormViewModel

@using Telerik.Sitefinity.UI.MVC;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Services;

@*Add scripts and stylesheets*@
@Html.Script(ScriptRef.JQuery, "top")
@Html.Script("//ajax.aspnetcdn.com/ajax/jquery.validate/1.8.1/jquery.validate.js",  "top")
@Html.Script("//ajax.aspnetcdn.com/ajax/mvc/4.0/jquery.validate.unobtrusive.min.js", "top")

@{
    var isTwoCols = (Model.ExternalProviders != null && Model.ExternalProviders.Count() > 0) ? "col-md-6" : "";
}

<div class="@Model.CssClass row sf-m-xxs">
    @if (Telerik.Sitefinity.Security.SecurityManager.GetCurrentUserId() == Guid.Empty || SystemManager.IsInlineEditingMode || SystemManager.IsDesignMode)
    {
        using (Html.BeginFormSitefinity(@Request.Url.Query, null, null, FormMethod.Post, null, true))
        {
        <div class="@isTwoCols">
         @Html.ValidationSummary(true)
		 		 
            <h3>@Html.Resource("LoginFormLogInLegendHeader")</h3>
			
            @if (@Request.Url.Query.Contains("err=true"))
            {            
				<div class="alert alert-danger">
					@Html.Resource("IncorrectCredentialsMessage")
				</div>                
            }

            <div class="form-group">
                <label>
                    @Html.Resource("Email")
                </label>

                @Html.TextBoxFor(u => u.UserName, new { @class = "form-control" })
                @if(Html.ValidationMessage("UserName")!=null)
                {
                    <div class="has-error">
                        <span class="help-block">@Html.ValidationMessage("UserName")</span>
                    </div>
                }  

            </div>

            <div class="form-group">
                <label>
                    @Html.Resource("Password")
                </label>

                @Html.PasswordFor(u => u.Password, new { @class = "form-control" })
                @if(Html.ValidationMessage("Password") != null)
                {
                    <div class="has-error">
                        <span class="help-block">@Html.ValidationMessage("Password")</span>
                    </div>
                }  

            </div>

            @if (Model.ShowRememberMe || Model.ShowForgotPasswordLink)
            {
            var isPulledRight = Model.ShowRememberMe ? "" : "pull-right";

            <div class="form-group row @isPulledRight">
                @if (Model.ShowRememberMe)
                {
                <div class="checkbox col-md-6 sf-m-xxs">
                    <label>
                        @Html.CheckBoxFor(u => u.RememberMe)
                        @Html.Resource("RememberMe")
                    </label>
                </div>
                }
                @if (Model.ShowForgotPasswordLink)
                {
                <div class="text-right sf-pr-l">
                    @Html.ActionLink(Html.Resource("ForgottenPasword"), "ForgotPassword")
                </div>
                }
            </div>
            }
			
			<div class="form-group">
				<button type="submit" class="btn btn-primary">@Html.Resource("LoginFormLogInButton")</button>
			</div>

            @if (Model.ShowRegistrationLink)
            {
                <div class="sf-registration-link">
                    <div>@Html.Resource("NotRegisteredYet")</div>
                    <a href="@Model.RegisterPageUrl">@Html.Resource("LoginFormRegisterNow")</a>
                </div>
            }
            </div>
        
            if (Model.ExternalProviders != null && Model.ExternalProviders.Count() > 0)
            {
            <div class="col-md-6">                
                <h3>@Html.Resource("UseAccountIn")</h3>

                @foreach (var provider in Model.ExternalProviders)
                { 
                    var classToBeAdd = "btn btn-default btn-lg btn-block " + @provider.Value;                 
                    <div class="sf-mb-xs">
                        @Html.ActionLink(provider.Key, "LoginExternalProvider", new { model = provider.Key }, new { @class = classToBeAdd })
                    </div>
                }
            </div>
            }
		
        }
    }
    
    else
    {
        <p>@Html.Resource("AlreadyLoggedIn")</p>
    }
</div>

@Html.Script(Url.WidgetContent("Mvc/Scripts/LoginForm/login-form.js"), "bottom")
