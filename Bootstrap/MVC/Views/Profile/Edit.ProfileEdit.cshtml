@model Telerik.Sitefinity.Frontend.Identity.Mvc.Models.Profile.ProfileEditViewModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.UI.MVC;
@using Telerik.Sitefinity.Utilities;

@Html.Script(ScriptRef.JQuery, "top")
@Html.Script("//ajax.aspnetcdn.com/ajax/jquery.validate/1.8.1/jquery.validate.js", "top")
@Html.Script("//ajax.aspnetcdn.com/ajax/mvc/4.0/jquery.validate.unobtrusive.min.js", "top")

<div class="@Model.CssClass">
    @if (Model.ShowProfileChangedMsg)
    {
        <div class="alert alert-success">@Html.Resource("ChangesAreSaved")</div>
    }

    @using (Html.BeginFormSitefinity("Index", "EditProfileForm", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

    <div class="row sf-profile">
        <div class="col-md-3">
            @Html.HiddenFor(u => u.DeletePicture, new Dictionary<string, object>() { { "data-sf-role", "edit-profile-delete-picture" } })
            @Html.HiddenFor(u => u.DefaultAvatarUrl, new Dictionary<string, object>() { { "data-sf-role", "edit-profile-default-avatar-url" } })

            <div class="sf-profile-avatar">
                <img data-sf-role="edit-profile-user-image" src="@Model.AvatarImageUrl" alt="@Model.UserName" width="100" height="100"/>
                @*<a class="sf-remove glyphicon glyphicon-remove-sign" href="#" data-sf-role="edit-profile-delete-picture-button"></a>*@
            </div>

            <div>
                <input type="file" data-sf-role="edit-profile-upload-picture-input" name="UploadedImage" style="display: none;" />
                <a href="#" data-sf-role="edit-profile-upload-picture-button">@Html.Resource("EditProfileUploadImage")</a>
            </div>

        </div>

        <div class="col-md-9">
             @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
            {

                <div class="alert alert-danger">
                    @ViewBag.ErrorMessage
                </div>

            }
            <div class="form-group">
                <label>
                    @Html.Resource("EditProfileFirstName")
                </label>
                @Html.TextBoxFor(u => u.Profile["FirstName"], new { @class = "form-control" })

                @if (Html.ValidationMessageFor(u => u.Profile["FirstName"]) != null)
                {
                    <div class="has-error">
                        <span class="help-block">@Html.ValidationMessageFor(u => u.Profile["FirstName"])</span>
                    </div>
                }
            </div>

            <div class="form-group">
                <label>
                    @Html.Resource("EditProfileLastName")
                </label>
                @Html.TextBoxFor(u => u.Profile["LastName"], new { @class = "form-control" })

                @if (Html.ValidationMessageFor(u => u.Profile["LastName"]) != null)
                {
                    <div class="has-error">
                        <span class="help-block">@Html.ValidationMessageFor(u => u.Profile["LastName"])</span>
                    </div>
                }
            </div>

            <div class="form-group">
                <label>
                    @Html.Resource("EditProfileAbout")
                </label>
               @Html.TextBoxFor(u => u.Profile["About"], new { @class = "form-control" })

            </div>

            <div><a href="#" data-sf-role="edit-profile-change-password-button">@Html.Resource("EditProfileChangePasswordButton")</a></div>

            <div data-sf-role="edit-profile-change-password-holder" style="display:none">

                <h4>@Html.Resource("EditProfileEditChangePasswordHeader")</h4>

                <div class="form-group">
                    <label>
                        @Html.Resource("EditProfileOldPassword")
                    </label>

                    @Html.PasswordFor(u => u.OldPassword, new { @class = "form-control", autocomplete = "off" })

                    @if (Html.ValidationMessageFor(u => u.OldPassword) != null)
                    {
                        <div class="has-error">
                            <span class="help-block">@Html.ValidationMessageFor(u => u.OldPassword)</span>
                        </div>
                    }
                </div>

                <div class="form-group">
                    <label>
                        @Html.Resource("EditProfileNewPassword")
                    </label>
                    @Html.PasswordFor(u => u.NewPassword, new { @class = "form-control" })

                    @if (Html.ValidationMessageFor(u => u.NewPassword) != null)
                    {
                        <div class="has-error">
                            <span class="help-block">@Html.ValidationMessageFor(u => u.NewPassword)</span>
                        </div>
                    }
                </div>

                <div class="form-group">
                    <label>
                        @Html.Resource("EditProfileRepeatPassword")
                    </label>
                    @Html.PasswordFor(u => u.RepeatPassword, new { @class = "form-control" })

                    @if (Html.ValidationMessageFor(u => u.RepeatPassword) != null)
                    {
                        <div class="has-error">
                            <span class="help-block">@Html.ValidationMessageFor(u => u.RepeatPassword)</span>
                        </div>
                    }
                </div>
            </div>

            <button data-sf-role="profile-submit" type="submit" class="btn btn-primary">@Html.Resource("EditProfileSave")</button>
            @Html.ActionLink(Html.Resource("EditProfileCancel"), "Index")

        </div>
     </div>
    }
</div>

@{
    bool hasPasswordErrors = ViewBag.HasPasswordErrors is bool && ViewBag.HasPasswordErrors == true;
}

<input type="hidden" data-sf-role="has-password-errors" value="@hasPasswordErrors.ToString().ToLowerInvariant()" />

@Html.Script(Url.WidgetContent("Mvc/Scripts/Profile/profile-edit.js"), "bottom")
