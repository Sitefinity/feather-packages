@model Telerik.Sitefinity.Frontend.Forms.Mvc.Models.Fields.TextField.TextFieldViewModel

@using Telerik.Sitefinity.UI.MVC;
@using Telerik.Sitefinity.Frontend.Forms.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Frontend.Forms.Mvc.Models.Fields.TextField;

@Html.Script(ScriptRef.JQuery, "top", false)
<!-- InputCssClass class variable -->

@{ var inputCssClass = "";
   HashSet<TextType> availableOptions = new HashSet<TextType>() { TextType.Text, TextType.Password, TextType.Date, TextType.DateTimeLocal, TextType.Month, TextType.Time,
   TextType.Week, TextType.Number, TextType.Email,TextType.Url, TextType.Tel, TextType.Color };

   if (availableOptions.Contains(Model.InputType))
   {
       inputCssClass = "form-control";
   }
}


<div class="@Model.CssClass form-group" data-sf-role="text-field-container">
    <input data-sf-role="violation-restrictions" type="hidden" value='{"maxLength":"@Model.ValidatorDefinition.MaxLength", "minLength": "@Model.ValidatorDefinition.MinLength"}' />
    <input data-sf-role="violation-messages" type="hidden" value='{"maxLength":"@Model.ValidatorDefinition.MaxLengthViolationMessage", "required": "@Model.ValidatorDefinition.RequiredViolationMessage", "invalid": "@Html.Resource("InvalidEntryMessage")", "regularExpression": "@Model.ValidatorDefinition.RegularExpressionViolationMessage"}' />

    <label for='@Html.UniqueId("Textbox")'>@Model.MetaField.Title</label>
    <input id='@Html.UniqueId("Textbox")' data-sf-role="text-field-input" type="@Model.InputType.ToHtmlInputType()" name="@Model.MetaField.FieldName" placeholder="@Model.PlaceholderText" value="@Model.Value" @Model.ValidationAttributes class="@inputCssClass"></input>
     @if (!string.IsNullOrEmpty(Model.MetaField.Description)) 
     {
         <p class="text-muted">@Model.MetaField.Description</p>
     }
</div>

@Html.Script(Url.WidgetContent("Mvc/Scripts/TextField/text-field.js"), "bottom", false)