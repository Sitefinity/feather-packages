@model Telerik.Sitefinity.Frontend.EmailCampaigns.Mvc.Models.UnsubscribeForm.UnsubscribeFormViewModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.UI.MVC;
@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Modules.Pages;

@*Add scripts and stylesheets*@
@Html.Script(ScriptRef.JQuery, "top", false)
@Html.Script("//ajax.aspnetcdn.com/ajax/jquery.validate/1.8.1/jquery.validate.js", "top", false)
@Html.Script("//ajax.aspnetcdn.com/ajax/mvc/4.0/jquery.validate.unobtrusive.min.js", "top", false)

<div class="@Model.CssClass">
    @using (Html.BeginFormSitefinity())
    {
        <h3>@Model.WidgetTitle</h3>

        <p class="text-muted">@Model.WidgetDescription</p>

        if (ViewBag.IsSucceded == true)
        {
            <div class="alert alert-success">@Html.Raw(Model.Message)</div>
        }

        @Html.ValidationSummary(true)

        if (!string.IsNullOrEmpty(ViewBag.Error))
        {
            <div class="alert alert-danger">
                @ViewBag.Error
            </div>
        }

        <div class="form-group">
            <label>
                @Html.Resource("Email")
            </label>

            <div class="form-inline">

                @Html.TextBoxFor(u => u.Email, new { @class = "form-control", type = "email" })

                <button type="submit" class="btn btn-primary">@Html.Resource("ButtonUnsubscribe")</button>

            </div>

            @if (Html.ValidationMessageFor(u => u.Email) != null)
            {
                <div class="has-error">
                    <span class="help-block">@Html.ValidationMessageFor(u => u.Email)</span>
                </div>
            }

        </div>
    }
</div>
